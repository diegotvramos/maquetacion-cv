

/* ***********************Custom Properties************************** */

/*las defino en el selector Root es decir en la etiqueta Html por que con eso me aseguro
    de que su alcansé esté para todo los selectores del documento
*/
:root{
    --first-color: #d90062;
    --first-alpha-color: rgba(217, 0, 98, 0.75);
    --second-color: #14192d;
    --second-alpha-color: rgba(20, 25, 45, 0.75);
    --third-color: #501462;
    --third-alpha-color: rgba(80, 20, 100, 0.75);
    --white-color: #fff;
    --gray-light-color: #f3f3f3;
    --gray-color:#ccc;
    --gray-dark-color: #666;
    --black-color: #000;
    --link-color: #509ee3;
    --title-color: #333;
    --text-color: #222;
    --white-alpha-color: rgba(255, 255, 255, 0.5);
    --black-alpha-color: rgba(0, 0, 0, 0.50);
    /*tipografia*/
    --font: "Raleway", sans-serif;
    /*maxima tamaño de crecimiento*/
    --max-width: 1200px;
    --header-height: 4rem; /*equivale  a 64 px*/
}
/* ***********************Reset************************** */
html{
    /*modelo de caja: vamos hacer que el tamaño de la caja empieze desde el borde
     y no desde el contenido como es por default por que si lo dejamos desde
     el contenido corremos el riesgo de que cuando asignamos paddings o borders
     pues los tamaños no correspondan*/
    box-sizing: border-box;
    font-family: var(--font); /*definimos la familia de fuente*/
    font-size: 16px; /*tamaño de letra del html explicitamente, ¿Por que?  
    por que como voy a estar utilizando la unidad de medida REM (rem es basado
    en el tamaño de la tipografia de la etiqueta html*/

    /*para la transicion*/
    scroll-behavior: smooth;
}




/*con el selector universal todo los elementos su contenido generado dinamicamente
    con after y before que hereden el tamaño de caja y ¿de quien van a heredar
    el tamaño de caja? del nodo principal que es la etiqueta html
*/
*,
*::after,
*::before{
    box-sizing: inherit; /*hereda*/
}
/*por defecto trae 8 pixeles de margin*/
body{
    margin: 0;
    /*overflow-x: hidden; /*oculta todo lo que desborda en el eje x (horizontal) oculta la barra de desplazamiento*/
    color: var(--text-color);
}



/*Estilo a los links*/
a{
    color: var(--link-color);
    transition: all 0.5s ease-out;
}

/*le quita ese azul al hcer click*/
* {
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

a:hover{
    opacity: 0.75;
}

/*todo los encabezados tienen un poco de margen ariba y abajo dependiendo
    del nivel de encabezado van variando los márgenes, lo que me gusta es
    resetar el margen de los encabezados a 0 y ya yo darle la distancia
    adecuada
*/
h1{
    margin: 0;
    font-size: 2rem;
}

h2 {
    margin: 0;
    font-size: 1.5rem;
}
  
h3 {
    margin: 0;
    font-size: 1.25rem;
}
  
h4 {
    margin: 0;
    font-size: 1rem;
}
  
h5 {
    margin: 0;
    font-size: 0.85rem;
}
  
h6 {
    margin: 0;
    font-size: 0.7rem;
}
/*Imagenes Responsivas HACK*/
img{
    max-width: 100%;
    height: auto;
}
/*Estilo a los párrafos*/
p{
    line-height: 1.6rem;
    /* line-height: 1.2; */
    /* line-height: normal; */
    /* font-size: 1rem; */
}

/* ***********************Componentes************************** */

/* ***** Carousel ***** */


/*la desventaja es que debo volver a recalcular en caso de 5 slides*/
@keyframes carousel-slide{
    0% {
        transform: translateX(0%);
    }
    25% {
        transform: translateX(-25%);
    }
    50% {
        transform: translateX(-50%);
    }
    75% {
        transform: translateX(-75%);
    }
}

.carousel{
    margin: 2rem auto;
    padding: 2rem 0;
    max-width: 100vw; /*solocionó el error de tamaño de carousel en version movile*/
    text-align: center;
    background-color: var(--carousel-bg-color);
    overflow-x: hidden; /*ocultamos el contenido que exede el borde izquierdo y derecho*/
}

.carousel .slides{

    padding-left: 0;
    /*debes sumarle un 100% al ancho por cada slide*/
    width: 400%;
    display: flex;
    list-style: none; /*quita los bulets*/
    transition: transform 0.5s ease-in-out;
    animation: carousel-slide 12s ease-in-out 3s; /*podriamos ponerla de forma infinita pero los controles de los checbox no nos van a obedecer*/
    /*que dé un delete de 3s despues de que el navegador carga*/
}

.carousel input{
    display: none;
}

.carousel label{
    border: medium solid var(--gray-dark-color);
    border-radius: 50%;
    margin: 0 0.25rem;
    display: inline-block;
    width: 0.75rem;
    height: 0.75rem;
    cursor: pointer;
}
#slide-1:checked ~ .slides{
    transform: translateX(0%);
}
#slide-2:checked ~ .slides{
    transform: translateX(-25%);
}
#slide-3:checked ~ .slides{
    transform: translateX(-50%);
}
#slide-4:checked ~ .slides{
    transform: translateX(-75%);
}

/*para marcar los cuadritos*/
#slide-1:checked ~ .slides-nav label#dot-1,
#slide-2:checked ~ .slides-nav label#dot-2,
#slide-3:checked ~ .slides-nav label#dot-3,
#slide-4:checked ~ .slides-nav label#dot-4{
    background-color: var(--gray-dark-color);
}

/* ***** Contact Form ***** */

.contact-form {
    margin: 2rem auto;
    padding: 1rem;
    max-width: 800px;
}
/*oye, todo los elementos que son hijos directos de contact form sin 
importar que tipo de etiqueta o selector es, le vas a aplicar lo siguiente
*/
.contact-form > *{
    padding: 0.5rem;
    margin: 1rem auto;/*arriba y abajo, automático a los lados*/
    display: block;
    width: 100%; /*le damos el 100% de su contenedor*/
}

/*todo los imputs que están dentro del contact form y toda las text-areas
que estén dentro del contar-form aplicales:*/

.contact-form input,
.contact-form textarea{
    font-size: 0.85rem;
    font-family: var(--font);
}

.contact-form input{
    border: 0;/*quitamos todo los bordes*/
    padding-left: 0; /*esto es para que el texto se alinea al borde asé está en figma*/
    border-bottom: thin solid var(--gray-dark-color);

}

.contact-form textarea {
    border: thin solid var(--gray-dark-color);
    resize: none; /*para desaparecer el triangulito*/
}

.contact-form input[type="submit"]{
    margin-top: 0;
    cursor: pointer;
    transition: all 0.5s ease-in-out;
}
.contact-form input[type="submit"]:hover{
    opacity: 0.75;
}

/*dentro de contact-form a todo los elementos hijos pero que tengan
la pseudoclase Placeholder ponele:*/
.contact-form *::placeholder{
    color: var(--gray-dark-color);
}

.contact-form-response{
    padding: 1rem;
    width: 400px;
    text-align: center;
    background-color: var(--white-color);
}
/*rellenamos el svg*/
.contact-form-response svg{
    margin-top: 2rem;
    width: 4rem;
    height: 4rem;
    fill: var(--first-color);
}

/*El elmento que tenga la clase modal y que enta el Id = gracias 
cuando sea target de la página aplicale:*/
.modal#gracias:target{
    opacity: 1;
    pointer-events: auto;
}


@media screen and (min-width: 64rem){

    .contact-form{
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        column-gap: 1rem; /*espaciado entre columnas*/
    }

    .contact-form input,
    .contact-form textarea{
        font-size: 1rem;
    }
    
    /*para que el loader tambien ocupe 2 espacios*/
    .contact-form textarea,
    .contact-form-loader{
        grid-column: span 2;
    }

    .contact-form input[type="submit"]{
        margin-left: 0; /*hace que se pegue a la izquierda*/
    }
}

/* ***** HeroImage ***** */
.hero-image{
    background-image: var(--hero-image);
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
    background-attachment: var(--hero-attachment);

}

.hero-image-opacity{
    width: 100%;
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    background-color: var(--hero-opacity-color);
}

.hero-image-title{
    font-size: 7.5vw; /*el valor se obtubo de prueva y error*/
    color:var(--hero-text-color);

}

/* ***** Menú ***** */

.menu-btn{
    outline: thin solid var(--first-color);
    border: 0;
    cursor: pointer;
    background-color: var(--second-color);
}

.menu-btn svg{
    fill: var(--first-color); /*aplicamos relleno a los svg's*/
}


.menu{
    /* display: none; */
    position: fixed;
    left: 0;
    bottom: var(--header-height); /*distancia*/
    width: 100%;
    display: flex;
    flex-direction: column;
    background-color: var(--second-color);

    opacity: 0; /*lo volvemos invicible*/
    pointer-events: none;
    transition: opacity 0.5s ease;
}

/*¿Cuando se va activar el menú, esta clase lo vamos a activar con JS?*/
.menu.is-active{
    opacity: 1;
    pointer-events: auto;
}

.menu a{
    padding: 1rem; /*pading de 1 rem a los 4 lados*/
    font-size: 1.5rem;
    font-weight: bold;
    text-align: center;
    text-decoration: none;
    color: var(--first-color);
}


/*en el estado hover invertimos los colores*/
.menu a:hover{
    color: var(--white-color);
    background-color: var(--first-color);
}

@media screen and (min-width: 64rem){ /*respeta espacios entre el AND*/
    .menu-btn{
        display: none;
    }
    .menu{
        position: static;
        opacity: 1;
        width: auto;
        flex-direction: row;
        pointer-events: auto;
    }
    .menu a{
        padding: 0 1rem;
    }
    .menu a:last-child{
        padding-right: 0;
    }
    .menu a:hover{
        background-color: transparent;
    }
}

/**** Modal ****/

.modal{
    position: fixed;
    z-index: 999;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: var(--black-alpha-color);
    opacity: 0;
    pointer-events: none;
    transition: all 1s;
}

.modal-content{
    position: relative;
}

.modal-close{
    position: absolute;
    top: 1rem;
    right: 1rem;
}

.modal-close svg{
    width: 3rem;
    height: 3rem;
    fill: var(--first-color);
}

/*¿Cómo voy hacer que se abra el contenido modal?*/

/*Estos estilos van a aplicar cuando el target de la página esté en este ID
interno*/


/*cuando la ventana modal id(trabajo 1) y  esté en el target  de la página
simplemente le dicemos: que active estos estilos || target es un pseudoelemento*/
/* .modal#trabajo-1:target{
} */

/*Con los selectores de atributos puedo usar el simbolos del 'PAIP, TILDE Y CIRCUNFLEJO'
 para decirle: quiero que el valor de este atributo empieze o termine o tenga 
 dentro de su valor estas palabras entonces aplique estos estilos


*/
.modal[id|="trabajo"]:target{
    opacity: 1;
    pointer-events: auto;
}

/* ******* ProgressBar ********* */

progress{
    width: 100%;
    height: 1rem;
    background-color: var(--gray-color);
}

progress::-webkit-progress-bar{
    background-color: var(--gray-color);
}

progress::-webkit-progress-value{
    background-color: var(--gray-dark-color);
}

progress::-moz-progress-bar{
    background-color: var(--gray-dark-color);
}

.progress-b{
    margin: 1rem auto;
}
.progress-b > p{
    margin: 0;
    display: flex;
    justify-content: space-between;
    font-size: 0.85rem;
}







/* ***********************Utilities************************** */

.avatar{
    border-radius: 50%;
    width: 150px;
    height: 150px;
}


.bg-gray-light{
    background-color: var(--gray-light-color);
}

.box-shadow-1{
    /* box-shadow: 4px 4px 16px rgba(0, 0, 0, 0.25); */
    box-shadow: .25rem .25rem 1rem rgba(0, 0, 0, 0.25);
}

.btn{
    border-radius: 0.5rem;
    padding: 1rem;
    /*los enlaces trabajan en linea pero quiero que tenga caracteristicas de linea y bloque*/
    display: inline-block;
    width: 200px;
    font-weight: bold;
    text-align: center;
    text-decoration: none;
    color: var(--white-color);
    background-color: var(--first-color);
}

.container{
    margin-left: auto;
    margin-right: auto;
    max-width: var(--max-width);
}

.gray-scale{
    filter: grayscale(1);
}

.none{
    display: none;
}

.section{
    padding: 2rem 1rem;
}

.section-title{
    border-top: thin solid var(--first-color);
    border-bottom: thin solid var(--first-color);
    margin: 2rem auto; /*Con esto se centra*/
    padding: 0.5rem 1rem; /*nos sirve para separar el texto de los bordes de la caja*/
    width: 250px;
    text-align: center;
    color: var(--title-color);
}

.text-first-color{
    color: var(--first-color);
}

.text-center{
    text-align: center;
}

.text-left{
    text-align: left;
}

.text-right{
    text-align: right;
}


@media screen and (min-width:48em){
    .full-md-screen{
        width: 100%;
        min-height: 100vh;
    }
}
/*para pc creo una media query*/
@media screen and (min-width:64rem){
    .full-lg-screen{
        width: 100%;
        min-height: 100vh;
    }

    .text-lg-center{
        text-align: center;
    }
    
    .text-lg-left{
        text-align: left;
    }
    
    .text-lg-right{
        text-align: right;
    }
}


/* ***********************Site Styles************************** */

.about > article{
    margin-bottom: 2rem;
}

.contact-card{
   margin: 1rem auto; 
   padding: 2rem; 
   width: 100%;/*que herede el 100% del contenedor en el que están */   
   height: 144px; /*por que esa altura está en el Figma*/
   display: flex;
   flex-direction: column;
   justify-content: space-around;
   align-items: center; /*en el eje transversal que en este caso seia x */
}

.contact-card > svg {
    width: 2rem;
    height: 2rem;
    fill: var(--first-color);
}

/*oye, dentro de contact card yo sé que tienes una etiqueta _small_ que
es hija directa*/

.contact-card > small{
   /*margin-top: -1rem; /*hace que el contenido se suba*/
}

.header{
    position: fixed; 
    left: 0;
    bottom: 0;

    z-index: 999;
    /*padding: 1rem; /*1rem + 1rem + 2 rem contenido = 4 rems se hace un centrado perfecto ♥😀*/
    padding: calc((var(--header-height) - 2.35rem) * 0.5); /*2.35rem = 37.6px es el espacio que ocupa la letra del logo*/
    width: 100%;/*ya que perdio sus propiedades de ancho y alto*/
    height: var(--header-height);
    background-color: var(--second-color);
}

.header > .container{
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.portfolio-card{
    position: relative;
    width: 100%;
    margin: 0 auto;
    display: block; /*para que  estén uno debajo del otro*/
}

.portfolio-card img{
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.portfolio-card-info{
    position: absolute;
    top: 0;
    left: 0; /*le decimos que este sobre su elemento padre*/
    width: 100%;
    height: 100%;
    padding: 1rem;
    background-color: var(--first-alpha-color);
    color: var(--white-color);
    /*lo ocultamos igual que en el caso del menú*/
    opacity: 0;
    pointer-events: none;
    transition: all 0.5s ease-in-out; /*no olvides poner la S*/
}

/*lo volvemos a mostrar en el estado hover*/

.portfolio-card:hover .portfolio-card-info{
    opacity: 1;
    pointer-events: auto;
}

.portfolio-card-info > div{
    padding: 1rem;
    border: thin solid var(--white-color);
    /*Oviamente se está adaptando a la altura de su contenedor*/
    /*lo que voy hacer es darle todo el 100 % para que cresca ese borde*/
    width: 100%;
    height: 100%;
}

.portfolio-modal{
    padding: 1rem;
    max-width: 400px; /*la imagen no se deforma por que la etiqueta 'IMG' ya tiene estilos*/
    display: flex;
    flex-direction: column;
    background-color: var(--white-color);
}

.portfolio-modal h3{
    border-bottom: medium solid var(--first-color);
    margin: 1rem auto; /*ariba y bajo, Costados*/
    padding: 0.5rem 0;
    color: var(--title-color);
    text-align: center;
}

.portfolio-details{
    display: grid;
    grid-template-columns: 30% 70%; 
    grid-auto-rows: 2rem; /*como las filas se acomodan implicitamente le doy una latura*/
}

.portfolio-details b{
    color: var(--first-color);
}

.logo a{
    color: var(--first-color);
    font-weight: bold;
    font-size: 2rem;
    line-height: normal;
    text-decoration: none;
}

.service-card{
    margin: 1rem auto; /*ariba y a los costado (para que se centre)*/
    padding: 1rem;
    text-align: center;
}

.service-card h3{
    color: var(--title-color);
}

.service-card svg{
    margin-bottom: 1.25rem;
    fill: var(--first-color);
}


/*para quitar el text decoratin a los iconos*/
.social-media a {
    padding: 0 0.4rem;
    text-decoration: none;
}
.social-media svg {
    width: 1.5rem;
    height: 1.5rem;
}

/* @media screen and (min-width:768px){ */
@media screen and (min-width:48em){

    .contact-cards{
        display: grid;
        grid-template-columns: repeat(2, 48%);
        justify-content: space-between;
        
    }

    .portfolio > .container{ /*adentro tienes un hijo(elemento) directo*/
        display: grid;
        grid-template-columns: repeat(2, 50%);
    }

    /*para que el título ocupe 2 columnas*/
    .portfolio .section-title{
        grid-column: span 2;
    }

    .portfolio-modal{
        max-width: 800px;
        flex-direction: row;
    }

    .portfolio-info{
        margin-left: 1rem;
        align-self: center; /*Centra en el eje "Y" y deja respirar al boton X*/
    }

    .services > .container{
        display: grid;
        grid-template-columns: repeat(2, 45%);
        justify-content: space-between;
        align-content: center;
    }

    .services .section-title{
        grid-column: span 2;
    }

}
/* @media screen and (min-width:1024px){ */
@media screen and (min-width:64em){

    .about{
       display: grid;
       grid-template-columns: repeat(3, 30%); /*sobra 10%*/
       justify-content: space-between; /*el 10% sobrante lo distribuyo en espacios*/
       align-content: center; /*en el eje de Y me lo alinea el contenido al centro*/
    }
    
    .contact-cards{
        grid-template-columns: repeat(4, 24%);
    }

    .carousel{
        max-width: 800px;
    }

    .header{
        position: sticky;
        /* position: fixed; */
        top: 0;
        padding: 0.5rem;
        /*voy a modificar dinamicamente la altura de la cabezera*/
        /* height: calc(var(--header-height) - 0.5rem); */ /*JONMIRCHA*/
        /* height: var(--header-height); */
        /**/
        height: calc(2.35rem + 1rem);
    }

    .portfolio > .container{ /*adentro tienes un hijo(elemento) directo*/
        grid-template-columns: repeat(3,1fr); /*100 / 3  = 3.33333  mejor usamos fraccion.😲😯😲😲*/
    }

    /*para que el título ocupe 2 columnas*/
    .portfolio .section-title{
        grid-column: span 3;
    }

    .services > .container{
        /*display: grid; /* ya no es necesario por que está definido en la media scren de 48EM rem*/
        grid-template-columns: repeat(3, 30%);
        /* justify-content: space-between; */
        /* align-content: center; */
    }

    .services .section-title{
        grid-column: span 3;
    }
}

















